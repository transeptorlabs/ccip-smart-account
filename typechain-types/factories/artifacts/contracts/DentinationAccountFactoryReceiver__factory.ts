/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DentinationAccountFactoryReceiver,
  DentinationAccountFactoryReceiverInterface,
} from "../../../artifacts/contracts/DentinationAccountFactoryReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CreateCallSuccessfull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200106938038062001069833981810160405281019062000037919062000281565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620000a49190620002d9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000102620000f66200014b60201b60201c565b6200015360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002f6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000249826200021c565b9050919050565b6200025b816200023c565b81146200026757600080fd5b50565b6000815190506200027b8162000250565b92915050565b600080604083850312156200029b576200029a62000217565b5b6000620002ab858286016200026a565b9250506020620002be858286016200026a565b9150509250929050565b620002d3816200023c565b82525050565b6000602082019050620002f06000830184620002c8565b92915050565b608051610d5062000319600039600081816101fd01526102cd0152610d506000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a714610067578063715018a61461009757806385572ffb146100a15780638da5cb5b146100bd578063b0f479a1146100db578063f2fde38b146100f9575b600080fd5b610081600480360381019061007c91906105f7565b610115565b60405161008e919061063f565b60405180910390f35b61009f6101e7565b005b6100bb60048036038101906100b6919061067e565b6101fb565b005b6100c56102a0565b6040516100d29190610708565b60405180910390f35b6100e36102c9565b6040516100f09190610708565b60405180910390f35b610113600480360381019061010e919061074f565b6102f1565b005b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101e057507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6101ef610374565b6101f960006103f2565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028b57336040517fd7f733340000000000000000000000000000000000000000000000000000000081526004016102829190610708565b60405180910390fd5b61029d8161029890610b70565b6104b6565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6102f9610374565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f90610c06565b60405180910390fd5b610371816103f2565b50565b61037c610583565b73ffffffffffffffffffffffffffffffffffffffff1661039a6102a0565b73ffffffffffffffffffffffffffffffffffffffff16146103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790610c72565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682606001516040516105039190610d03565b6000604051808303816000865af19150503d8060008114610540576040519150601f19603f3d011682016040523d82523d6000602084013e610545565b606091505b505090508061055357600080fd5b7fb31b05daff700889fcd0d75fcefa991e13ceed3a41df64bfa027e4c41c58d95460405160405180910390a15050565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6105d48161059f565b81146105df57600080fd5b50565b6000813590506105f1816105cb565b92915050565b60006020828403121561060d5761060c610595565b5b600061061b848285016105e2565b91505092915050565b60008115159050919050565b61063981610624565b82525050565b60006020820190506106546000830184610630565b92915050565b600080fd5b600060a082840312156106755761067461065a565b5b81905092915050565b60006020828403121561069457610693610595565b5b600082013567ffffffffffffffff8111156106b2576106b161059a565b5b6106be8482850161065f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106f2826106c7565b9050919050565b610702816106e7565b82525050565b600060208201905061071d60008301846106f9565b92915050565b61072c816106e7565b811461073757600080fd5b50565b60008135905061074981610723565b92915050565b60006020828403121561076557610764610595565b5b60006107738482850161073a565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107ca82610781565b810181811067ffffffffffffffff821117156107e9576107e8610792565b5b80604052505050565b60006107fc61058b565b905061080882826107c1565b919050565b600080fd5b6000819050919050565b61082581610812565b811461083057600080fd5b50565b6000813590506108428161081c565b92915050565b600067ffffffffffffffff82169050919050565b61086581610848565b811461087057600080fd5b50565b6000813590506108828161085c565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156108ad576108ac610792565b5b6108b682610781565b9050602081019050919050565b82818337600083830152505050565b60006108e56108e084610892565b6107f2565b9050828152602081018484840111156109015761090061088d565b5b61090c8482856108c3565b509392505050565b600082601f83011261092957610928610888565b5b81356109398482602086016108d2565b91505092915050565b600067ffffffffffffffff82111561095d5761095c610792565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b61098681610973565b811461099157600080fd5b50565b6000813590506109a38161097d565b92915050565b6000604082840312156109bf576109be61077c565b5b6109c960406107f2565b905060006109d98482850161073a565b60008301525060206109ed84828501610994565b60208301525092915050565b6000610a0c610a0784610942565b6107f2565b90508083825260208201905060408402830185811115610a2f57610a2e61096e565b5b835b81811015610a585780610a4488826109a9565b845260208401935050604081019050610a31565b5050509392505050565b600082601f830112610a7757610a76610888565b5b8135610a878482602086016109f9565b91505092915050565b600060a08284031215610aa657610aa561077c565b5b610ab060a06107f2565b90506000610ac084828501610833565b6000830152506020610ad484828501610873565b602083015250604082013567ffffffffffffffff811115610af857610af761080d565b5b610b0484828501610914565b604083015250606082013567ffffffffffffffff811115610b2857610b2761080d565b5b610b3484828501610914565b606083015250608082013567ffffffffffffffff811115610b5857610b5761080d565b5b610b6484828501610a62565b60808301525092915050565b6000610b7c3683610a90565b9050919050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610bf0602683610b83565b9150610bfb82610b94565b604082019050919050565b60006020820190508181036000830152610c1f81610be3565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c5c602083610b83565b9150610c6782610c26565b602082019050919050565b60006020820190508181036000830152610c8b81610c4f565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610cc6578082015181840152602081019050610cab565b60008484015250505050565b6000610cdd82610c92565b610ce78185610c9d565b9350610cf7818560208601610ca8565b80840191505092915050565b6000610d0f8284610cd2565b91508190509291505056fea2646970667358221220f0834b9b65b0e8e8d7f7536974ddce10f4a3215633a08090a5dfb071a7a7202864736f6c63430008130033";

type DentinationAccountFactoryReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DentinationAccountFactoryReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DentinationAccountFactoryReceiver__factory extends ContractFactory {
  constructor(...args: DentinationAccountFactoryReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    accountFactoryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DentinationAccountFactoryReceiver> {
    return super.deploy(
      router,
      accountFactoryAddress,
      overrides || {}
    ) as Promise<DentinationAccountFactoryReceiver>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    accountFactoryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      router,
      accountFactoryAddress,
      overrides || {}
    );
  }
  override attach(address: string): DentinationAccountFactoryReceiver {
    return super.attach(address) as DentinationAccountFactoryReceiver;
  }
  override connect(signer: Signer): DentinationAccountFactoryReceiver__factory {
    return super.connect(signer) as DentinationAccountFactoryReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DentinationAccountFactoryReceiverInterface {
    return new utils.Interface(
      _abi
    ) as DentinationAccountFactoryReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DentinationAccountFactoryReceiver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DentinationAccountFactoryReceiver;
  }
}
