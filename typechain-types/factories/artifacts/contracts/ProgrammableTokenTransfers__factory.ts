/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProgrammableTokenTransfers,
  ProgrammableTokenTransfersInterface,
} from "../../../artifacts/contracts/ProgrammableTokenTransfers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "providedIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxIndex",
        type: "uint256",
      },
    ],
    name: "IndexOutOfBound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageIdNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "NoMessageReceived",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToWithdraw",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Client.EVMTokenAmount",
        name: "tokenAmount",
        type: "tuple",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Client.EVMTokenAmount",
        name: "tokenAmount",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastReceivedMessageDetails",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfReceivedMessages",
    outputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getReceivedMessageAt",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "getReceivedMessageDetails",
    outputs: [
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messageDetail",
    outputs: [
      {
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "receivedMessages",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200340238038062003402833981810160405281019062000037919062000382565b3380600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b15760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620000a89190620003c5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000158576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014f9062000443565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001df57620001de81620001e960201b60201c565b5b50505050620004d7565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200025a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200025190620004b5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200034a826200031d565b9050919050565b6200035c816200033d565b81146200036857600080fd5b50565b6000815190506200037c8162000351565b92915050565b6000602082840312156200039b576200039a62000318565b5b6000620003ab848285016200036b565b91505092915050565b620003bf816200033d565b82525050565b6000602082019050620003dc6000830184620003b4565b92915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200042b601883620003e2565b91506200043882620003f3565b602082019050919050565b600060208201905081810360008301526200045e816200041c565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200049d601783620003e2565b9150620004aa8262000465565b602082019050919050565b60006020820190508181036000830152620004d0816200048e565b9050919050565b608051612f08620004fa60003960008181610d23015261129f0152612f086000f3fe6080604052600436106100ec5760003560e01c806385572ffb1161008a578063b0f479a111610059578063b0f479a11461030c578063d030366c14610337578063eebc927b14610374578063f2fde38b146103b6576100f3565b806385572ffb1461023a5780638da5cb5b146102635780639c3ddb2e1461028e5780639c7ee0bc146102cf576100f3565b80633aeac4e1116100c65780633aeac4e11461019057806351bd6698146101b957806351cff8d9146101fa57806379ba509714610223576100f3565b806301ffc9a7146100f85780630b652d6d14610135578063263596a514610160576100f3565b366100f357005b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611aab565b6103df565b60405161012c9190611af3565b60405180910390f35b34801561014157600080fd5b5061014a6104b1565b6040516101579190611b27565b60405180910390f35b34801561016c57600080fd5b506101756104be565b60405161018796959493929190611c4f565b60405180910390f35b34801561019c57600080fd5b506101b760048036038101906101b29190611ce3565b610704565b005b3480156101c557600080fd5b506101e060048036038101906101db9190611d4f565b610848565b6040516101f1959493929190611d7c565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190611dd6565b610a8e565b005b34801561022f57600080fd5b50610238610b8c565b005b34801561024657600080fd5b50610261600480360381019061025c9190611e27565b610d21565b005b34801561026f57600080fd5b50610278610dc6565b6040516102859190611e70565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190611d4f565b610def565b6040516102c6959493929190611d7c565b60405180910390f35b3480156102db57600080fd5b506102f660048036038101906102f19190611f48565b610f01565b6040516103039190611fe2565b60405180910390f35b34801561031857600080fd5b5061032161129b565b60405161032e9190611e70565b60405180910390f35b34801561034357600080fd5b5061035e60048036038101906103599190611ffd565b6112c3565b60405161036b9190611fe2565b60405180910390f35b34801561038057600080fd5b5061039b60048036038101906103969190611ffd565b6112e7565b6040516103ad96959493929190611c4f565b60405180910390f35b3480156103c257600080fd5b506103dd60048036038101906103d89190611dd6565b61153a565b005b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104aa57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000600280549050905090565b60008060006060600080600060028054905003610507576040517f6ad69dd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600160028054905061051b9190612059565b8154811061052c5761052b61208d565b5b906000526020600020015495506000600360008881526020019081526020016000206040518060a00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546105f1906120eb565b80601f016020809104026020016040519081016040528092919081815260200182805461061d906120eb565b801561066a5780601f1061063f5761010080835404028352916020019161066a565b820191906000526020600020905b81548152906001019060200180831161064d57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815250509050868160000151826020015183604001518460600151856080015196509650965096509650965050909192939495565b61070c61154e565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107479190611e70565b602060405180830381865afa158015610764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107889190612131565b9050600081036107c4576040517fd0d04f6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b81526004016107ff92919061215e565b6020604051808303816000875af115801561081e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084291906121b3565b50505050565b60008060606000806000600360008881526020019081526020016000206040518060a00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610908906120eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610934906120eb565b80156109815780601f1061095657610100808354040283529160200191610981565b820191906000526020600020905b81548152906001019060200180831161096457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1603610a6157866040517f4d47bb33000000000000000000000000000000000000000000000000000000008152600401610a589190611fe2565b60405180910390fd5b80600001518160200151826040015183606001518460800151955095509550955095505091939590929450565b610a9661154e565b600047905060008103610ad5576040517fd0d04f6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610afb90612211565b60006040518083038185875af1925050503d8060008114610b38576040519150601f19603f3d011682016040523d82523d6000602084013e610b3d565b606091505b5050905080610b87573383836040517f9d11f563000000000000000000000000000000000000000000000000000000008152600401610b7e93929190612226565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c13906122a9565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610db157336040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401610da89190611e70565b60405180910390fd5b610dc381610dbe906125f6565b6115de565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610e52906120eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7e906120eb565b8015610ecb5780601f10610ea057610100808354040283529160200191610ecb565b820191906000526020600020905b815481529060010190602001808311610eae57829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905085565b600080600167ffffffffffffffff811115610f1f57610f1e6122ce565b5b604051908082528060200260200182016040528015610f5857816020015b610f45611a0f565b815260200190600190039081610f3d5790505b509050600060405180604001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581525090508082600081518110610f9f57610f9e61208d565b5b602002602001018190525060006040518060a001604052808a604051602001610fc89190611e70565b60405160208183030381529060405281526020018989604051602001610fef929190612636565b6040516020818303038152906040528152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001611049604051806040016040528062030d40815260200160001515815250611864565b815250905060003073ffffffffffffffffffffffffffffffffffffffff1663b0f479a16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bf919061266f565b90508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b382886040518363ffffffff1660e01b81526004016110fc92919061215e565b6020604051808303816000875af115801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f91906121b3565b5060008173ffffffffffffffffffffffffffffffffffffffff166320487ded8d856040518363ffffffff1660e01b815260040161117d929190612878565b602060405180830381865afa15801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be9190612131565b90508173ffffffffffffffffffffffffffffffffffffffff166396f4e9f9828e866040518463ffffffff1660e01b81526004016111fc929190612878565b60206040518083038185885af115801561121a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061123f91906128bd565b95508b67ffffffffffffffff16867f218adb5a0a723dc22ce7712e38f03997cd4cefc41a7fd618de7329da31321c908d8d8d8987604051611284959493929190612919565b60405180910390a350505050509695505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600281815481106112d357600080fd5b906000526020600020016000915090505481565b60008060006060600080600280549050871061134d578660016002805490506113109190612059565b6040517fd0394270000000000000000000000000000000000000000000000000000000008152600401611344929190612967565b60405180910390fd5b600287815481106113615761136061208d565b5b906000526020600020015495506000600360008881526020019081526020016000206040518060a00160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054611426906120eb565b80601f0160208091040260200160405190810160405280929190818152602001828054611452906120eb565b801561149f5780601f106114745761010080835404028352916020019161149f565b820191906000526020600020905b81548152906001019060200180831161148257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481525050905086816000015182602001518360400151846060015185608001519650965096509650965096505091939550919395565b61154261154e565b61154b816118e3565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d3906129dc565b60405180910390fd5b565b6000816000015190506000826020015190506000836040015180602001905181019061160a9190612a3a565b905060008460800151905060008160008151811061162b5761162a61208d565b5b602002602001015160000151905060008260008151811061164f5761164e61208d565b5b6020026020010151602001519050600087606001518060200190518101906116779190612b08565b9050600287908060018154018082558091505060019003906000526020600020016000909190919091505560006040518060a001604052808867ffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815250905080600360008a815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010190816117a29190612cfd565b5060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600301559050508667ffffffffffffffff16887f852dbe7c0b886f87e176d6af0c3e5537dd2fc249db45c9a4348aa9bc5d18120688858960008151811061183a5761183961208d565b5b602002602001015160405161185193929190612dcf565b60405180910390a3505050505050505050565b60606397a657c960e01b8260405160240161187f9190612e4b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194890612eb2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a8881611a53565b8114611a9357600080fd5b50565b600081359050611aa581611a7f565b92915050565b600060208284031215611ac157611ac0611a49565b5b6000611acf84828501611a96565b91505092915050565b60008115159050919050565b611aed81611ad8565b82525050565b6000602082019050611b086000830184611ae4565b92915050565b6000819050919050565b611b2181611b0e565b82525050565b6000602082019050611b3c6000830184611b18565b92915050565b6000819050919050565b611b5581611b42565b82525050565b600067ffffffffffffffff82169050919050565b611b7881611b5b565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ba982611b7e565b9050919050565b611bb981611b9e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bf9578082015181840152602081019050611bde565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c2182611bbf565b611c2b8185611bca565b9350611c3b818560208601611bdb565b611c4481611c05565b840191505092915050565b600060c082019050611c646000830189611b4c565b611c716020830188611b6f565b611c7e6040830187611bb0565b8181036060830152611c908186611c16565b9050611c9f6080830185611bb0565b611cac60a0830184611b18565b979650505050505050565b611cc081611b9e565b8114611ccb57600080fd5b50565b600081359050611cdd81611cb7565b92915050565b60008060408385031215611cfa57611cf9611a49565b5b6000611d0885828601611cce565b9250506020611d1985828601611cce565b9150509250929050565b611d2c81611b42565b8114611d3757600080fd5b50565b600081359050611d4981611d23565b92915050565b600060208284031215611d6557611d64611a49565b5b6000611d7384828501611d3a565b91505092915050565b600060a082019050611d916000830188611b6f565b611d9e6020830187611bb0565b8181036040830152611db08186611c16565b9050611dbf6060830185611bb0565b611dcc6080830184611b18565b9695505050505050565b600060208284031215611dec57611deb611a49565b5b6000611dfa84828501611cce565b91505092915050565b600080fd5b600060a08284031215611e1e57611e1d611e03565b5b81905092915050565b600060208284031215611e3d57611e3c611a49565b5b600082013567ffffffffffffffff811115611e5b57611e5a611a4e565b5b611e6784828501611e08565b91505092915050565b6000602082019050611e856000830184611bb0565b92915050565b611e9481611b5b565b8114611e9f57600080fd5b50565b600081359050611eb181611e8b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611edc57611edb611eb7565b5b8235905067ffffffffffffffff811115611ef957611ef8611ebc565b5b602083019150836001820283011115611f1557611f14611ec1565b5b9250929050565b611f2581611b0e565b8114611f3057600080fd5b50565b600081359050611f4281611f1c565b92915050565b60008060008060008060a08789031215611f6557611f64611a49565b5b6000611f7389828a01611ea2565b9650506020611f8489828a01611cce565b955050604087013567ffffffffffffffff811115611fa557611fa4611a4e565b5b611fb189828a01611ec6565b94509450506060611fc489828a01611cce565b9250506080611fd589828a01611f33565b9150509295509295509295565b6000602082019050611ff76000830184611b4c565b92915050565b60006020828403121561201357612012611a49565b5b600061202184828501611f33565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061206482611b0e565b915061206f83611b0e565b92508282039050818111156120875761208661202a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061210357607f821691505b602082108103612116576121156120bc565b5b50919050565b60008151905061212b81611f1c565b92915050565b60006020828403121561214757612146611a49565b5b60006121558482850161211c565b91505092915050565b60006040820190506121736000830185611bb0565b6121806020830184611b18565b9392505050565b61219081611ad8565b811461219b57600080fd5b50565b6000815190506121ad81612187565b92915050565b6000602082840312156121c9576121c8611a49565b5b60006121d78482850161219e565b91505092915050565b600081905092915050565b50565b60006121fb6000836121e0565b9150612206826121eb565b600082019050919050565b600061221c826121ee565b9150819050919050565b600060608201905061223b6000830186611bb0565b6122486020830185611bb0565b6122556040830184611b18565b949350505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000612293601683611bca565b915061229e8261225d565b602082019050919050565b600060208201905081810360008301526122c281612286565b9050919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61230682611c05565b810181811067ffffffffffffffff82111715612325576123246122ce565b5b80604052505050565b6000612338611a3f565b905061234482826122fd565b919050565b600080fd5b600080fd5b600067ffffffffffffffff82111561236e5761236d6122ce565b5b61237782611c05565b9050602081019050919050565b82818337600083830152505050565b60006123a66123a184612353565b61232e565b9050828152602081018484840111156123c2576123c161234e565b5b6123cd848285612384565b509392505050565b600082601f8301126123ea576123e9611eb7565b5b81356123fa848260208601612393565b91505092915050565b600067ffffffffffffffff82111561241e5761241d6122ce565b5b602082029050602081019050919050565b600060408284031215612445576124446122c9565b5b61244f604061232e565b9050600061245f84828501611cce565b600083015250602061247384828501611f33565b60208301525092915050565b600061249261248d84612403565b61232e565b905080838252602082019050604084028301858111156124b5576124b4611ec1565b5b835b818110156124de57806124ca888261242f565b8452602084019350506040810190506124b7565b5050509392505050565b600082601f8301126124fd576124fc611eb7565b5b813561250d84826020860161247f565b91505092915050565b600060a0828403121561252c5761252b6122c9565b5b61253660a061232e565b9050600061254684828501611d3a565b600083015250602061255a84828501611ea2565b602083015250604082013567ffffffffffffffff81111561257e5761257d612349565b5b61258a848285016123d5565b604083015250606082013567ffffffffffffffff8111156125ae576125ad612349565b5b6125ba848285016123d5565b606083015250608082013567ffffffffffffffff8111156125de576125dd612349565b5b6125ea848285016124e8565b60808301525092915050565b60006126023683612516565b9050919050565b60006126158385611bca565b9350612622838584612384565b61262b83611c05565b840190509392505050565b60006020820190508181036000830152612651818486612609565b90509392505050565b60008151905061266981611cb7565b92915050565b60006020828403121561268557612684611a49565b5b60006126938482850161265a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006126c38261269c565b6126cd81856126a7565b93506126dd818560208601611bdb565b6126e681611c05565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61272681611b9e565b82525050565b61273581611b0e565b82525050565b604082016000820151612751600085018261271d565b506020820151612764602085018261272c565b50505050565b6000612776838361273b565b60408301905092915050565b6000602082019050919050565b600061279a826126f1565b6127a481856126fc565b93506127af8361270d565b8060005b838110156127e05781516127c7888261276a565b97506127d283612782565b9250506001810190506127b3565b5085935050505092915050565b600060a083016000830151848203600086015261280a82826126b8565b9150506020830151848203602086015261282482826126b8565b9150506040830151848203604086015261283e828261278f565b9150506060830151612853606086018261271d565b506080830151848203608086015261286b82826126b8565b9150508091505092915050565b600060408201905061288d6000830185611b6f565b818103602083015261289f81846127ed565b90509392505050565b6000815190506128b781611d23565b92915050565b6000602082840312156128d3576128d2611a49565b5b60006128e1848285016128a8565b91505092915050565b604082016000820151612900600085018261271d565b506020820151612913602085018261272c565b50505050565b600060a08201905061292e6000830188611bb0565b8181036020830152612941818688612609565b905061295060408301856128ea565b61295d6080830184611b18565b9695505050505050565b600060408201905061297c6000830185611b18565b6129896020830184611b18565b9392505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006129c6601683611bca565b91506129d182612990565b602082019050919050565b600060208201905081810360008301526129f5816129b9565b9050919050565b6000612a0782611b7e565b9050919050565b612a17816129fc565b8114612a2257600080fd5b50565b600081519050612a3481612a0e565b92915050565b600060208284031215612a5057612a4f611a49565b5b6000612a5e84828501612a25565b91505092915050565b600067ffffffffffffffff821115612a8257612a816122ce565b5b612a8b82611c05565b9050602081019050919050565b6000612aab612aa684612a67565b61232e565b905082815260208101848484011115612ac757612ac661234e565b5b612ad2848285611bdb565b509392505050565b600082601f830112612aef57612aee611eb7565b5b8151612aff848260208601612a98565b91505092915050565b600060208284031215612b1e57612b1d611a49565b5b600082015167ffffffffffffffff811115612b3c57612b3b611a4e565b5b612b4884828501612ada565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612bb37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612b76565b612bbd8683612b76565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612bfa612bf5612bf084611b0e565b612bd5565b611b0e565b9050919050565b6000819050919050565b612c1483612bdf565b612c28612c2082612c01565b848454612b83565b825550505050565b600090565b612c3d612c30565b612c48818484612c0b565b505050565b5b81811015612c6c57612c61600082612c35565b600181019050612c4e565b5050565b601f821115612cb157612c8281612b51565b612c8b84612b66565b81016020851015612c9a578190505b612cae612ca685612b66565b830182612c4d565b50505b505050565b600082821c905092915050565b6000612cd460001984600802612cb6565b1980831691505092915050565b6000612ced8383612cc3565b9150826002028217905092915050565b612d0682611bbf565b67ffffffffffffffff811115612d1f57612d1e6122ce565b5b612d2982546120eb565b612d34828285612c70565b600060209050601f831160018114612d675760008415612d55578287015190505b612d5f8582612ce1565b865550612dc7565b601f198416612d7586612b51565b60005b82811015612d9d57848901518255600182019150602085019450602081019050612d78565b86831015612dba5784890151612db6601f891682612cc3565b8355505b6001600288020188555050505b505050505050565b6000608082019050612de46000830186611bb0565b8181036020830152612df68185611c16565b9050612e0560408301846128ea565b949350505050565b612e1681611ad8565b82525050565b604082016000820151612e32600085018261272c565b506020820151612e456020850182612e0d565b50505050565b6000604082019050612e606000830184612e1c565b92915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000612e9c601783611bca565b9150612ea782612e66565b602082019050919050565b60006020820190508181036000830152612ecb81612e8f565b905091905056fea2646970667358221220928efb382704044e2399e5f67a64cd66a9405669e9dd4934a892eb0fdaba4db264736f6c63430008130033";

type ProgrammableTokenTransfersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProgrammableTokenTransfersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProgrammableTokenTransfers__factory extends ContractFactory {
  constructor(...args: ProgrammableTokenTransfersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProgrammableTokenTransfers> {
    return super.deploy(
      router,
      overrides || {}
    ) as Promise<ProgrammableTokenTransfers>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, overrides || {});
  }
  override attach(address: string): ProgrammableTokenTransfers {
    return super.attach(address) as ProgrammableTokenTransfers;
  }
  override connect(signer: Signer): ProgrammableTokenTransfers__factory {
    return super.connect(signer) as ProgrammableTokenTransfers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProgrammableTokenTransfersInterface {
    return new utils.Interface(_abi) as ProgrammableTokenTransfersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProgrammableTokenTransfers {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProgrammableTokenTransfers;
  }
}
