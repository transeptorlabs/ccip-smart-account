/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BasicTokenSender,
  BasicTokenSenderInterface,
} from "../../../artifacts/contracts/BasicTokenSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainSelector",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Client.EVMTokenAmount[]",
        name: "tokensToSendDetails",
        type: "tuple[]",
      },
      {
        internalType: "enum BasicTokenSender.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001fe938038062001fe98339818101604052810190620000379190620003f8565b338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a390620004a0565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001335762000132816200025f60201b60201c565b5b5050508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050600561ffff1660c08161ffff168152505060a05173ffffffffffffffffffffffffffffffffffffffff1663095ea7b36080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040162000210929190620004ee565b6020604051808303816000875af115801562000230573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000256919062000558565b505050620005fc565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002d0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002c790620005da565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003c08262000393565b9050919050565b620003d281620003b3565b8114620003de57600080fd5b50565b600081519050620003f281620003c7565b92915050565b600080604083850312156200041257620004116200038e565b5b60006200042285828601620003e1565b92505060206200043585828601620003e1565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620004886018836200043f565b9150620004958262000450565b602082019050919050565b60006020820190508181036000830152620004bb8162000479565b9050919050565b620004cd81620003b3565b82525050565b6000819050919050565b620004e881620004d3565b82525050565b6000604082019050620005056000830185620004c2565b620005146020830184620004dd565b9392505050565b60008115159050919050565b62000532816200051b565b81146200053e57600080fd5b50565b600081519050620005528162000527565b92915050565b6000602082840312156200057157620005706200038e565b5b6000620005818482850162000541565b91505092915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000620005c26017836200043f565b9150620005cf826200058a565b602082019050919050565b60006020820190508181036000830152620005f581620005b3565b9050919050565b60805160a05160c0516119a1620006486000396000610537015260006107cc0152600081816106a001528181610820015281816108eb015281816109900152610a8901526119a16000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e9578063b6d2440c14610114578063f2fde38b1461013d578063fbca3b74146101665761007b565b80633aeac4e11461008057806351cff8d9146100a957806379ba5097146100d25761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610d5b565b6101a3565b005b3480156100b557600080fd5b506100d060048036038101906100cb9190610d9b565b6102ad565b005b3480156100de57600080fd5b506100e7610371565b005b3480156100f557600080fd5b506100fe610506565b60405161010b9190610dd7565b60405180910390f35b34801561012057600080fd5b5061013b6004803603810190610136919061103b565b61052f565b005b34801561014957600080fd5b50610164600480360381019061015f9190610d9b565b610a71565b005b34801561017257600080fd5b5061018d600480360381019061018891906110be565b610a85565b60405161019a91906111a9565b60405180910390f35b6101ab610b2d565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101e69190610dd7565b602060405180830381865afa158015610203573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022791906111e0565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b815260040161026492919061121c565b6020604051808303816000875af1158015610283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a7919061127d565b50505050565b6102b5610b2d565b600047905060008273ffffffffffffffffffffffffffffffffffffffff16826040516102e0906112db565b60006040518083038185875af1925050503d806000811461031d576040519150601f19603f3d011682016040523d82523d6000602084013e610322565b606091505b505090508061036c573383836040517f9d11f563000000000000000000000000000000000000000000000000000000008152600401610363939291906112f0565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f890611384565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000825190507f000000000000000000000000000000000000000000000000000000000000000061ffff1681111561059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390611416565b60405180910390fd5b60005b8181101561074a578381815181106105ba576105b9611436565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff166323b872dd33308785815181106105f6576105f5611436565b5b6020026020010151602001516040518463ffffffff1660e01b8152600401610620939291906112f0565b6020604051808303816000875af115801561063f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610663919061127d565b5083818151811061067757610676611436565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008684815181106106d2576106d1611436565b5b6020026020010151602001516040518363ffffffff1660e01b81526004016106fb92919061121c565b6020604051808303816000875af115801561071a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073e919061127d565b5080600101905061059f565b5060006040518060a00160405280866040516020016107699190610dd7565b60405160208183030381529060405281526020016040518060200160405280600081525081526020018581526020016001808111156107ab576107aa611465565b5b8560018111156107be576107bd611465565b5b146107ca5760006107ec565b7f00000000000000000000000000000000000000000000000000000000000000005b73ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded88846040518363ffffffff1660e01b815260040161087992919061169a565b602060405180830381865afa158015610896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ba91906111e0565b905060006001808111156108d1576108d0611465565b5b8560018111156108e4576108e3611465565b5b0361098e577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f989856040518363ffffffff1660e01b815260040161094492919061169a565b6020604051808303816000875af1158015610963573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109879190611700565b9050610a30565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f9838a866040518463ffffffff1660e01b81526004016109ea92919061169a565b60206040518083038185885af1158015610a08573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a2d9190611700565b90505b7f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a81604051610a5f919061173c565b60405180910390a15050505050505050565b610a79610b2d565b610a8281610bbd565b50565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663fbca3b74836040518263ffffffff1660e01b8152600401610ae09190611757565b600060405180830381865afa158015610afd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b26919061184a565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb2906118df565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c229061194b565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2882610cfd565b9050919050565b610d3881610d1d565b8114610d4357600080fd5b50565b600081359050610d5581610d2f565b92915050565b60008060408385031215610d7257610d71610cf3565b5b6000610d8085828601610d46565b9250506020610d9185828601610d46565b9150509250929050565b600060208284031215610db157610db0610cf3565b5b6000610dbf84828501610d46565b91505092915050565b610dd181610d1d565b82525050565b6000602082019050610dec6000830184610dc8565b92915050565b600067ffffffffffffffff82169050919050565b610e0f81610df2565b8114610e1a57600080fd5b50565b600081359050610e2c81610e06565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e8082610e37565b810181811067ffffffffffffffff82111715610e9f57610e9e610e48565b5b80604052505050565b6000610eb2610ce9565b9050610ebe8282610e77565b919050565b600067ffffffffffffffff821115610ede57610edd610e48565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b610f0c81610ef9565b8114610f1757600080fd5b50565b600081359050610f2981610f03565b92915050565b600060408284031215610f4557610f44610ef4565b5b610f4f6040610ea8565b90506000610f5f84828501610d46565b6000830152506020610f7384828501610f1a565b60208301525092915050565b6000610f92610f8d84610ec3565b610ea8565b90508083825260208201905060408402830185811115610fb557610fb4610eef565b5b835b81811015610fde5780610fca8882610f2f565b845260208401935050604081019050610fb7565b5050509392505050565b600082601f830112610ffd57610ffc610e32565b5b813561100d848260208601610f7f565b91505092915050565b6002811061102357600080fd5b50565b60008135905061103581611016565b92915050565b6000806000806080858703121561105557611054610cf3565b5b600061106387828801610e1d565b945050602061107487828801610d46565b935050604085013567ffffffffffffffff81111561109557611094610cf8565b5b6110a187828801610fe8565b92505060606110b287828801611026565b91505092959194509250565b6000602082840312156110d4576110d3610cf3565b5b60006110e284828501610e1d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61112081610d1d565b82525050565b60006111328383611117565b60208301905092915050565b6000602082019050919050565b6000611156826110eb565b61116081856110f6565b935061116b83611107565b8060005b8381101561119c5781516111838882611126565b975061118e8361113e565b92505060018101905061116f565b5085935050505092915050565b600060208201905081810360008301526111c3818461114b565b905092915050565b6000815190506111da81610f03565b92915050565b6000602082840312156111f6576111f5610cf3565b5b6000611204848285016111cb565b91505092915050565b61121681610ef9565b82525050565b60006040820190506112316000830185610dc8565b61123e602083018461120d565b9392505050565b60008115159050919050565b61125a81611245565b811461126557600080fd5b50565b60008151905061127781611251565b92915050565b60006020828403121561129357611292610cf3565b5b60006112a184828501611268565b91505092915050565b600081905092915050565b50565b60006112c56000836112aa565b91506112d0826112b5565b600082019050919050565b60006112e6826112b8565b9150819050919050565b60006060820190506113056000830186610dc8565b6113126020830185610dc8565b61131f604083018461120d565b949350505050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b600061136e601683611327565b915061137982611338565b602082019050919050565b6000602082019050818103600083015261139d81611361565b9050919050565b7f4d6178696d756d203520646966666572656e7420746f6b656e732063616e206260008201527f652073656e74207065722043434950204d657373616765000000000000000000602082015250565b6000611400603783611327565b915061140b826113a4565b604082019050919050565b6000602082019050818103600083015261142f816113f3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61149d81610df2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114dd5780820151818401526020810190506114c2565b60008484015250505050565b60006114f4826114a3565b6114fe81856114ae565b935061150e8185602086016114bf565b61151781610e37565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61155781610ef9565b82525050565b6040820160008201516115736000850182611117565b506020820151611586602085018261154e565b50505050565b6000611598838361155d565b60408301905092915050565b6000602082019050919050565b60006115bc82611522565b6115c6818561152d565b93506115d18361153e565b8060005b838110156116025781516115e9888261158c565b97506115f4836115a4565b9250506001810190506115d5565b5085935050505092915050565b600060a083016000830151848203600086015261162c82826114e9565b9150506020830151848203602086015261164682826114e9565b9150506040830151848203604086015261166082826115b1565b91505060608301516116756060860182611117565b506080830151848203608086015261168d82826114e9565b9150508091505092915050565b60006040820190506116af6000830185611494565b81810360208301526116c1818461160f565b90509392505050565b6000819050919050565b6116dd816116ca565b81146116e857600080fd5b50565b6000815190506116fa816116d4565b92915050565b60006020828403121561171657611715610cf3565b5b6000611724848285016116eb565b91505092915050565b611736816116ca565b82525050565b6000602082019050611751600083018461172d565b92915050565b600060208201905061176c6000830184611494565b92915050565b600067ffffffffffffffff82111561178d5761178c610e48565b5b602082029050602081019050919050565b6000815190506117ad81610d2f565b92915050565b60006117c66117c184611772565b610ea8565b905080838252602082019050602084028301858111156117e9576117e8610eef565b5b835b8181101561181257806117fe888261179e565b8452602084019350506020810190506117eb565b5050509392505050565b600082601f83011261183157611830610e32565b5b81516118418482602086016117b3565b91505092915050565b6000602082840312156118605761185f610cf3565b5b600082015167ffffffffffffffff81111561187e5761187d610cf8565b5b61188a8482850161181c565b91505092915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006118c9601683611327565b91506118d482611893565b602082019050919050565b600060208201905081810360008301526118f8816118bc565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611935601783611327565b9150611940826118ff565b602082019050919050565b6000602082019050818103600083015261196481611928565b905091905056fea26469706673582212208936b19040419f51c4e28168fce40e519b522a9b1ab2bfc1b3bcb5d38dc66b5b64736f6c63430008130033";

type BasicTokenSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicTokenSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicTokenSender__factory extends ContractFactory {
  constructor(...args: BasicTokenSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicTokenSender> {
    return super.deploy(
      router,
      link,
      overrides || {}
    ) as Promise<BasicTokenSender>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, link, overrides || {});
  }
  override attach(address: string): BasicTokenSender {
    return super.attach(address) as BasicTokenSender;
  }
  override connect(signer: Signer): BasicTokenSender__factory {
    return super.connect(signer) as BasicTokenSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicTokenSenderInterface {
    return new utils.Interface(_abi) as BasicTokenSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicTokenSender {
    return new Contract(address, _abi, signerOrProvider) as BasicTokenSender;
  }
}
