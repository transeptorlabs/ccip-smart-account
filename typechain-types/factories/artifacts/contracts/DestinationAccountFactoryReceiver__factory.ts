/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DestinationAccountFactoryReceiver,
  DestinationAccountFactoryReceiverInterface,
} from "../../../artifacts/contracts/DestinationAccountFactoryReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CreateCallSuccessfull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccountFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accountFactoryAddress",
        type: "address",
      },
    ],
    name: "setAccountFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200113f3803806200113f833981810160405281019062000037919062000281565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620000a49190620002d9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000102620000f66200014b60201b60201c565b6200015360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002f6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000249826200021c565b9050919050565b6200025b816200023c565b81146200026757600080fd5b50565b6000815190506200027b8162000250565b92915050565b600080604083850312156200029b576200029a62000217565b5b6000620002ab858286016200026a565b9250506020620002be858286016200026a565b9150509250929050565b620002d3816200023c565b82525050565b6000602082019050620002f06000830184620002c8565b92915050565b608051610e26620003196000396000818161025d01526103a30152610e266000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639068a8681161005b5780639068a86814610101578063addc1a761461011f578063b0f479a11461013b578063f2fde38b1461015957610088565b806301ffc9a71461008d578063715018a6146100bd57806385572ffb146100c75780638da5cb5b146100e3575b600080fd5b6100a760048036038101906100a291906106cd565b610175565b6040516100b49190610715565b60405180910390f35b6100c5610247565b005b6100e160048036038101906100dc9190610754565b61025b565b005b6100eb610300565b6040516100f891906107de565b60405180910390f35b610109610329565b60405161011691906107de565b60405180910390f35b61013960048036038101906101349190610825565b610353565b005b61014361039f565b60405161015091906107de565b60405180910390f35b610173600480360381019061016e9190610825565b6103c7565b005b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061024057507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b61024f61044a565b61025960006104c8565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102eb57336040517fd7f733340000000000000000000000000000000000000000000000000000000081526004016102e291906107de565b60405180910390fd5b6102fd816102f890610c46565b61058c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61035b61044a565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6103cf61044a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590610cdc565b60405180910390fd5b610447816104c8565b50565b610452610659565b73ffffffffffffffffffffffffffffffffffffffff16610470610300565b73ffffffffffffffffffffffffffffffffffffffff16146104c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bd90610d48565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682606001516040516105d99190610dd9565b6000604051808303816000865af19150503d8060008114610616576040519150601f19603f3d011682016040523d82523d6000602084013e61061b565b606091505b505090508061062957600080fd5b7fb31b05daff700889fcd0d75fcefa991e13ceed3a41df64bfa027e4c41c58d95460405160405180910390a15050565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6106aa81610675565b81146106b557600080fd5b50565b6000813590506106c7816106a1565b92915050565b6000602082840312156106e3576106e261066b565b5b60006106f1848285016106b8565b91505092915050565b60008115159050919050565b61070f816106fa565b82525050565b600060208201905061072a6000830184610706565b92915050565b600080fd5b600060a0828403121561074b5761074a610730565b5b81905092915050565b60006020828403121561076a5761076961066b565b5b600082013567ffffffffffffffff81111561078857610787610670565b5b61079484828501610735565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c88261079d565b9050919050565b6107d8816107bd565b82525050565b60006020820190506107f360008301846107cf565b92915050565b610802816107bd565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b60006020828403121561083b5761083a61066b565b5b600061084984828501610810565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108a082610857565b810181811067ffffffffffffffff821117156108bf576108be610868565b5b80604052505050565b60006108d2610661565b90506108de8282610897565b919050565b600080fd5b6000819050919050565b6108fb816108e8565b811461090657600080fd5b50565b600081359050610918816108f2565b92915050565b600067ffffffffffffffff82169050919050565b61093b8161091e565b811461094657600080fd5b50565b60008135905061095881610932565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561098357610982610868565b5b61098c82610857565b9050602081019050919050565b82818337600083830152505050565b60006109bb6109b684610968565b6108c8565b9050828152602081018484840111156109d7576109d6610963565b5b6109e2848285610999565b509392505050565b600082601f8301126109ff576109fe61095e565b5b8135610a0f8482602086016109a8565b91505092915050565b600067ffffffffffffffff821115610a3357610a32610868565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b610a5c81610a49565b8114610a6757600080fd5b50565b600081359050610a7981610a53565b92915050565b600060408284031215610a9557610a94610852565b5b610a9f60406108c8565b90506000610aaf84828501610810565b6000830152506020610ac384828501610a6a565b60208301525092915050565b6000610ae2610add84610a18565b6108c8565b90508083825260208201905060408402830185811115610b0557610b04610a44565b5b835b81811015610b2e5780610b1a8882610a7f565b845260208401935050604081019050610b07565b5050509392505050565b600082601f830112610b4d57610b4c61095e565b5b8135610b5d848260208601610acf565b91505092915050565b600060a08284031215610b7c57610b7b610852565b5b610b8660a06108c8565b90506000610b9684828501610909565b6000830152506020610baa84828501610949565b602083015250604082013567ffffffffffffffff811115610bce57610bcd6108e3565b5b610bda848285016109ea565b604083015250606082013567ffffffffffffffff811115610bfe57610bfd6108e3565b5b610c0a848285016109ea565b606083015250608082013567ffffffffffffffff811115610c2e57610c2d6108e3565b5b610c3a84828501610b38565b60808301525092915050565b6000610c523683610b66565b9050919050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610cc6602683610c59565b9150610cd182610c6a565b604082019050919050565b60006020820190508181036000830152610cf581610cb9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d32602083610c59565b9150610d3d82610cfc565b602082019050919050565b60006020820190508181036000830152610d6181610d25565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610d9c578082015181840152602081019050610d81565b60008484015250505050565b6000610db382610d68565b610dbd8185610d73565b9350610dcd818560208601610d7e565b80840191505092915050565b6000610de58284610da8565b91508190509291505056fea264697066735822122072dba8c923dbc242ab4c9c3e6e971b313bd80e7ff4e24cbb69651f4c1286cb1564736f6c63430008130033";

type DestinationAccountFactoryReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationAccountFactoryReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationAccountFactoryReceiver__factory extends ContractFactory {
  constructor(...args: DestinationAccountFactoryReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    accountFactoryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DestinationAccountFactoryReceiver> {
    return super.deploy(
      router,
      accountFactoryAddress,
      overrides || {}
    ) as Promise<DestinationAccountFactoryReceiver>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    accountFactoryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      router,
      accountFactoryAddress,
      overrides || {}
    );
  }
  override attach(address: string): DestinationAccountFactoryReceiver {
    return super.attach(address) as DestinationAccountFactoryReceiver;
  }
  override connect(signer: Signer): DestinationAccountFactoryReceiver__factory {
    return super.connect(signer) as DestinationAccountFactoryReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationAccountFactoryReceiverInterface {
    return new utils.Interface(
      _abi
    ) as DestinationAccountFactoryReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestinationAccountFactoryReceiver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DestinationAccountFactoryReceiver;
  }
}
