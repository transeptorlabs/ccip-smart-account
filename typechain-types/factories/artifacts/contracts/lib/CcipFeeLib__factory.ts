/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CcipFeeLib,
  CcipFeeLibInterface,
} from "../../../../artifacts/contracts/lib/CcipFeeLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Client.EVMTokenAmount[]",
        name: "tokensToSendDetails",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "isEao",
        type: "bool",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "enum CcipFeeLib.PayFeesIn",
        name: "payFeesIn",
        type: "CcipFeeLib.PayFeesIn",
      },
    ],
    name: "getCcipTokenTransferBatchFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isEao",
        type: "bool",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "enum CcipFeeLib.PayFeesIn",
        name: "payFeesIn",
        type: "CcipFeeLib.PayFeesIn",
      },
    ],
    name: "getCcipTokenTransferFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610cee610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806375e6d617146100455780639a295e0614610075575b600080fd5b61005f600480360381019061005a9190610604565b6100a5565b60405161006c91906106c9565b60405180910390f35b61008f600480360381019061008a9190610892565b6102b0565b60405161009c91906106c9565b60405180910390f35b60008062030d40905085156100b957600090505b6000600167ffffffffffffffff8111156100d6576100d56106fa565b5b60405190808252806020026020018201604052801561010f57816020015b6100fc61048f565b8152602001906001900390816100f45790505b509050600060405180604001604052808b73ffffffffffffffffffffffffffffffffffffffff1681526020018a8152509050808260008151811061015657610155610950565b5b602002602001018190525060006040518060a001604052808d60405160200161017f919061098e565b60405160208183030381529060405281526020016040518060200160405280600081525081526020018481526020016001808111156101c1576101c06109a9565b5b8860018111156101d4576101d36109a9565b5b146101e05760006101e2565b885b73ffffffffffffffffffffffffffffffffffffffff16815260200161021d604051806040016040528088815260200160001515815250610410565b81525090508773ffffffffffffffffffffffffffffffffffffffff166320487ded8e836040518363ffffffff1660e01b815260040161025d929190610bed565b602060405180830381865afa15801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e9190610c32565b94505050505098975050505050505050565b60008062030d40905085156102c457600090505b60006040518060a001604052808a6040516020016102e2919061098e565b6040516020818303038152906040528152602001604051806020016040528060008152508152602001898152602001600180811115610324576103236109a9565b5b866001811115610337576103366109a9565b5b14610343576000610345565b865b73ffffffffffffffffffffffffffffffffffffffff168152602001610380604051806040016040528086815260200160001515815250610410565b81525090508573ffffffffffffffffffffffffffffffffffffffff166320487ded8b836040518363ffffffff1660e01b81526004016103c0929190610bed565b602060405180830381865afa1580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104019190610c32565b92505050979650505050505050565b60606397a657c960e01b8260405160240161042b9190610c9d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b6104f0816104d3565b81146104fb57600080fd5b50565b60008135905061050d816104e7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053e82610513565b9050919050565b61054e81610533565b811461055957600080fd5b50565b60008135905061056b81610545565b92915050565b6000819050919050565b61058481610571565b811461058f57600080fd5b50565b6000813590506105a18161057b565b92915050565b60008115159050919050565b6105bc816105a7565b81146105c757600080fd5b50565b6000813590506105d9816105b3565b92915050565b600281106105ec57600080fd5b50565b6000813590506105fe816105df565b92915050565b600080600080600080600080610100898b031215610625576106246104c9565b5b60006106338b828c016104fe565b98505060206106448b828c0161055c565b97505060406106558b828c0161055c565b96505060606106668b828c01610592565b95505060806106778b828c016105ca565b94505060a06106888b828c0161055c565b93505060c06106998b828c0161055c565b92505060e06106aa8b828c016105ef565b9150509295985092959890939650565b6106c381610571565b82525050565b60006020820190506106de60008301846106ba565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610732826106e9565b810181811067ffffffffffffffff82111715610751576107506106fa565b5b80604052505050565b60006107646104bf565b90506107708282610729565b919050565b600067ffffffffffffffff8211156107905761078f6106fa565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000604082840312156107c1576107c06107a6565b5b6107cb604061075a565b905060006107db8482850161055c565b60008301525060206107ef84828501610592565b60208301525092915050565b600061080e61080984610775565b61075a565b90508083825260208201905060408402830185811115610831576108306107a1565b5b835b8181101561085a578061084688826107ab565b845260208401935050604081019050610833565b5050509392505050565b600082601f830112610879576108786106e4565b5b81356108898482602086016107fb565b91505092915050565b600080600080600080600060e0888a0312156108b1576108b06104c9565b5b60006108bf8a828b016104fe565b97505060206108d08a828b0161055c565b965050604088013567ffffffffffffffff8111156108f1576108f06104ce565b5b6108fd8a828b01610864565b955050606061090e8a828b016105ca565b945050608061091f8a828b0161055c565b93505060a06109308a828b0161055c565b92505060c06109418a828b016105ef565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61098881610533565b82525050565b60006020820190506109a3600083018461097f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6109e1816104d3565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a21578082015181840152602081019050610a06565b60008484015250505050565b6000610a38826109e7565b610a4281856109f2565b9350610a52818560208601610a03565b610a5b816106e9565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610a9b81610533565b82525050565b610aaa81610571565b82525050565b604082016000820151610ac66000850182610a92565b506020820151610ad96020850182610aa1565b50505050565b6000610aeb8383610ab0565b60408301905092915050565b6000602082019050919050565b6000610b0f82610a66565b610b198185610a71565b9350610b2483610a82565b8060005b83811015610b55578151610b3c8882610adf565b9750610b4783610af7565b925050600181019050610b28565b5085935050505092915050565b600060a0830160008301518482036000860152610b7f8282610a2d565b91505060208301518482036020860152610b998282610a2d565b91505060408301518482036040860152610bb38282610b04565b9150506060830151610bc86060860182610a92565b5060808301518482036080860152610be08282610a2d565b9150508091505092915050565b6000604082019050610c0260008301856109d8565b8181036020830152610c148184610b62565b90509392505050565b600081519050610c2c8161057b565b92915050565b600060208284031215610c4857610c476104c9565b5b6000610c5684828501610c1d565b91505092915050565b610c68816105a7565b82525050565b604082016000820151610c846000850182610aa1565b506020820151610c976020850182610c5f565b50505050565b6000604082019050610cb26000830184610c6e565b9291505056fea264697066735822122065315ac72d733b1d583b62e14b31bbcf34c0483df18c59f20be316b3bca818ba64736f6c63430008130033";

type CcipFeeLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CcipFeeLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CcipFeeLib__factory extends ContractFactory {
  constructor(...args: CcipFeeLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CcipFeeLib> {
    return super.deploy(overrides || {}) as Promise<CcipFeeLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CcipFeeLib {
    return super.attach(address) as CcipFeeLib;
  }
  override connect(signer: Signer): CcipFeeLib__factory {
    return super.connect(signer) as CcipFeeLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CcipFeeLibInterface {
    return new utils.Interface(_abi) as CcipFeeLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CcipFeeLib {
    return new Contract(address, _abi, signerOrProvider) as CcipFeeLib;
  }
}
